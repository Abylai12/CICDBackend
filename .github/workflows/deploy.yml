name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  # ---------------- TEST JOB ----------------
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: testdb
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U test -d testdb"
          --health-interval=5s
          --health-timeout=5s
          --health-retries=20

    env:
      DATABASE_URL: postgresql://test:test@localhost:5432/testdb
      NODE_ENV: test
      CI: true

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm run test:ci

  # ---------------- DEPLOY JOB ----------------
  deploy:
    runs-on: ubuntu-latest
    needs: test # зөвхөн test амжилттай бол ажиллана

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and Push Backend
        run: |
          docker build -t abylai123/backend:latest .
          docker push abylai123/backend:latest

      - name: SSH to Server and Deploy
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            cd ~/my-app
            docker-compose -f docker-compose.yml -f docker-compose.dev.yml pull backend
            docker-compose -f docker-compose.yml -f docker-compose.dev.yml up -d backend
            docker image prune -f
